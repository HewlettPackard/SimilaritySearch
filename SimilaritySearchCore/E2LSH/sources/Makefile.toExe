# $Header: Makefile,v 1.3 95/08/17 14:14:17 hmgr Exp $
#This make file build the library libLSH.
#Done by Jun Li.

GCC=/opt/gcc/bin/g++

DEBUG   = -g -DREAL_FLOAT -DDEBUG -O3 -fPIC
##we will need the additional includes later
CXXINC  = 
CPLUSPLUS11_OPTIONS=-std=c++11
CXXOPTS = $(CPLUSPLUS11_OPTIONS) $(DEBUG) $(CXXINC)
CXX     = $(GCC)

# for the linking to produce an executable 
##LDOPTS  = -Wall,-w -L$(BOOCHLIB)
##LDOPTS  = -Wall -pedantic 
LDOPTS  = -Wall  

LIB_TO_BUILT = libexample.a
DCELIBS = -lm 
CXXLIBS = $(LIB_TO_BUILT) $(DCELIBS)

##CFLAGS = $(CXXINC) -Ae -D_REENTRANT -g
SRCS	= BucketHashing.cpp Geometry.cpp GlobalVars.cpp \
	  HashIndex.cpp IndexBuilder.cpp IndexSearch.cpp \
	  LocalitySensitiveHashing.cpp LSHHashFunction.cpp \
	  LSHManager.cpp MergeResult.cpp NaiveSearch.cpp \
	  NearNeighbors.cpp Random.cpp SearchCoordinator.cpp \
	  SearchResult.cpp SelfTuning.cpp TimeSeriesBuilder.cpp \
          TimeSeries.cpp TopK.cpp Util.cpp 
 
LIB_OBJS    = $(SRCS:.cpp=.o)

.SUFFIXES: .cpp

.cpp.o :
	$(CXX) $(CXXOPTS) -c $<

$(LIB_TO_BUILT): $(LIB_OBJS)
	-if [ -f $@ ]; then \
	  -rm $@; \
        else true; fi
	ar -cvq $@ $(LIB_OBJS)

all : LSHMain LSHtest

LSHMain : $(LIB_TO_BUILT) LSHMain.o
	$(CXX) $(LDOPTS) $(CXXOPTS) -o $@ LSHMain.o $(CXXLIBS)

LSHtest : $(LIB_TO_BUILT) LSHtest.o
	$(CXX) $(LDOPTS) $(CXXOPTS) -o $@ LSHtest.o $(CXXLIBS)

clean :
	-rm -f core *.o 
	-rm -f $(LIB_TO_BUILT)

clobber : clean
	-rm -f test1 test2
